---
title: 'Artigo 1: A Survey of High Utility Itemset Mining'
page-layout: full
---

No campo da mineração e análise de dados, a mineração de padrões frequentes possui uma relevância bastante significativa, sendo importante para encontrar associações e correlações entre diferentes variáveis. Essa área de estudo surgiu juntamente com o crescimento exponencial da quantidade de dados disponíveis em diversos setores da vida cotidiana, em especial o comércio, tendo sido batizada com o nome de "Analise da cesta de compras".  

<figure align="center">
    <img src="https://github.com/DCC831-Aprendizado-Descritivo/2024.1/assets/72149404/32526767-ceb1-4aff-a196-bd750f7b571b">
    <figcaption>Ilustração da análise de cesta de compras.</figcaption>
</figure>

Para dar seguimento a este artigo, é necessário definir (ou relembrar) alguns conceitos:
  
> **Item:** Um item é todo elemento de interesse que possui significado próprio e pode ser associado a *n* outros itens formando um padrão, ou conjunto. Para a mineração de padrões frequentes, é definido um universo finito dos itens na área em que se deseja empregar a técnica. Um item pode ser, por exemplo, uma garrafa de água no contexto de análises de comércio, ou uma ação tomada no contexto de análises comportamentais.  
> **Transação:** Uma transação é uma coleção de itens que foram adquiridos em conjunto de uma única vez, por uma única pessoa. O conjunto de transações é o que forma a base de dados utilizada para a análise, sendo que em quanto mais transações um padrão ocorrer, mais frequente ele é.  
> **Padrão (*Itemset*):** Os padrões são o que se espera encontrar ao fim do algoritmo, eles são conjuntos de itens (*itemsets*) que ocorrem dentro das transações, podendo englobar todos os itens de uma transação, ou ser um subconjunto dela.  
> **Suporte mínimo:** O suporte mínimo é a quantidade mínima de vezes que um padrão deve ocorrer nas transações para que ele seja considerado frequente.  

A análise final dos padrões identificados como frequentes através da mineração executada pode muitas vezes ser complicada, por se tratar de uma técnica de aprendizado não supervisionado. Mas além da complexidade inata da análise de resultados, existe também a possibilidade dos padrões obtidos não significarem nada, ou simplesmente serem pouco úteis para os objetivos do negócio.  
  
Por exemplo, considere que na análise de uma papelaria os itens "lápis" e "borracha" são frequentemente incluídos em uma mesma transação, o preço final pago pelo consumidor por apenas esse conjunto de itens será muito baixo, não trazendo os benefícios esperados da análise. Porém, na mesma papelaria, pode ser que os itens impressora e cartucho de tinta também são frequentemente comprados juntos, o que leva a um preço final maior pago pelo consumidor.  

<figure align="center">
    <img src="https://github.com/DCC831-Aprendizado-Descritivo/2024.1/assets/72149404/348ce1ff-9a39-4797-94f1-822b7f2d5a03">
    <figcaption>Comparação entre padrões frequentes e padrões úteis.</figcaption>
</figure>
  
O exemplo anterior é básico, mas ilustra a ideia de que os itens serem apenas frequentes pode não ser o suficiente, sendo necessário que as combinações analisadas sejam também úteis para o analista. É nesse contexto que surge a mineração de padrões frequentes de alta utilidade, tratada no artigo "***A Survey of High Utility Itemset Mining***", que aborda diferentes algoritmos para resolver esse problema.

Para entender esses algoritmos, é primeiro necessário fazer uma segunda leva de definições sobre o assunto, dessa vez mais específicas ao escopo de mineração de padrões de alta utilidade:  

> **Utilidade interna:** Se refere à utilidade de um item quando comparado com os outros dentro de uma mesma transação, podendo ser contabilizada como a quantidade de ocorrências daquele item dentro da transação. Note que essa medida é específica para cada uma das transações, com um item podendo ter uma alta utilidade interna em uma e uma baixa em outra.  
> **Utilidade externa:** Se refere à utilidade de um item quando comparado com todos os outros itens em um âmbito mais geral, podendo ser representado como o preço dele, o peso, ou outra medida importante.  
> **Utilidade total do item:** Calculada como a multiplicação da utilidade interna e externa do item na transação em específico.  
> **Utilidade total do padrão (*itemset*):** Calculada como a soma da utilidade total de todos os itens que componham o padrão, note que se um item não está presente em uma transação, a utilidade total dele automaticamente é zero.  

<figure align="center">
    <img src="https://github.com/DCC831-Aprendizado-Descritivo/2024.1/assets/72149404/a770b686-5b9d-440c-bbbf-85a7dc3896fd" width="800px" height="400px">
    <figcaption>Ilustração das utilidades.</figcaption>
</figure>

Perceba que, de acordo com essas definições, todos os algoritmos que são utilizados para mineração de padrões frequentes de alta utilidade podem também ser utilizados para minerar padrões frequentes, basta que a utilidade interna e externa de todos os itens seja definida com o mesmo valor, preferencialmente "1". Para entender melhor as semelhanças e diferenças entre as duas técnicas de mineração de dados, verifique a tabela a seguir:  

|                  Semelhanças                  |                  Diferenças                  |
|-----------------------------------------------|----------------------------------------------|
| **Objetivo:** ambas as técnicas buscam        | **Medida de importância:** na mineração de   |
| identificar padrões significativos em grandes | itens frequentes, a importância é medida pela|
| conjuntos de dados para auxiliar decisões de  | frequência; na de alta utilidade,            |
| negócios.                                     | considera-se o valor econômico ou estratégico|
|                                               | dos itens (função de utilidade).             |
|                                               |                                              |
| **Limite mínimo:** ambas utilizam a ideia de  | **Complexidade algorítmica:** algoritmos de  |
| limiar mínimo para filtrar padrões            | alta utilidade são mais complexos devido à   |
| significativos.                               | ausência de propriedades de monotonicidade,  |
|                                               | que são úteis na mineração de itens          |
|                                               | frequentes para reduzir o espaço de busca.   |
|                                               |                                              |
| **Processamento de dados:** as duas técnicas  | **Aplicações:** a mineração de itens de alta |
| operam frequentemente sobre dados             | utilidade é ideal em cenários onde a         |
| transacionais, que registram itens associados | maximização do lucro e utilidade dos itens é |
| conjuntamente.                                | essencial, enquanto a mineração de itens     |
|                                               | frequentes se aplica melhor a análises de    |
|                                               | co-ocorrência de itens de interesse.         |
|                                               |                                              |
| **Redução de dimensionalidade:** ambas as     |                                              |
| abordagens reduzem o espaço de busca          |                                              |
| eliminando itens que não atendem aos critérios|                                              |
| mínimos.
  
  
## Metodologia do artigo
O artigo adota uma abordagem metodológica baseada em Survey, delineando inicialmente o problema em questão e, em seguida, apresentando algoritmos destinados à sua resolução. Uma filtragem criteriosa de artigos relevantes no domínio da mineração de itemsets de alta utilidade foi realizada, seguida pela compilação e síntese dos algoritmos destacados, abordando suas estruturas e conceitos fundamentais.

Os primeiros algoritmos abrangentes para identificar conjuntos de itens de alta utilidade operam em duas fases distintas: primeiro, geram-se candidatos que são subsequentemente avaliados quanto à sua utilidade efetiva. Esses algoritmos introduziram uma inovação crucial ao estabelecer uma medida monótona que serviria como limite superior para a utilidade dos conjuntos de itens. Uma dessas medidas pioneiras foi a TWU (Transaction-Weighted Utilization), a qual permitiu uma poda eficiente do espaço de busca. Em estágios posteriores, surgiram algoritmos de uma única fase, cujo propósito é economizar tempo ao integrar a geração e avaliação de candidatos em um único passo. Vale ressaltar que muitos desses algoritmos propostos representam generalizações de técnicas de mineração de conjuntos de itens frequentes estabelecidas, como o Two Phase (uma extensão do Apriori) e o UP-Growth (uma extensão do FP-Growth).

Dentre os algoritmos apresentados para a mineração de padrões frequentes de alta utilidade são destacados os seguintes:

| Algoritmo  | Tipo de Busca         | Fases | Representação dos Dados         | Extende    |
|------------|-----------------------|-------|---------------------------------|------------|
| Two-Phase  | Busca em Largura      | Duas  | Horizontal                      | Apriori    |
| HUP-Growth | Busca em Profundidade | Duas  | Horizontal (Árvore de Prefixos) | FP-Growth  |
| D2HUP      | Busca em Profundidade | Uma   | Vertical (Hiperestrutura)       | H-Mine     |
| FHM        | Busca em Profundidade | Uma   | Vertical (Listas de Utilidade)  | Eclat      |
| EFIM       | Busca em Profundidade | Uma   | Vertical (com fusões)           | LCM        |

O artigo porém não se contém somente em discutir os algoritmos completos de mineração de padrões, mas também, reconhecendo a importância de representações com um nível maior de significado. É nesse ponto em que são apresentados os algoritmos que mineram representações concisas dos subconjuntos de alta utilidade:

| Algoritmo   | Padrões   | Fases | Representação dos Dados        | Extende    |
|-------------|-----------|-------|--------------------------------|------------|
| MinFHM      | MinUIs    | Uma   | Vertical (Listas de Utilidade) | FHM        |
| CHUD        | CHUIs     | Duas  | Vertical (Listas de Utilidade) | DCI Closed |
| EFIM-CLOSED​ | CHUIs     | Uma   | Horizontal (com fusões)        | EFM        |
| GUIDE       | MHUIs One | Uma   | Stream                         | UpGrowth   |

Por fim, são apresentados algoritmos que retornam apenas os K subconjuntos de alta utilidade mais frequentes no conjunto de transações:

| Algoritmo | Tipo de Busca         | Fases | Representação dos Dados         | Extende   |
|-----------|-----------------------|-------|---------------------------------|-----------|
| TKU​       | Busca em Profundidade​ | Duas  | Horizontal (Árvore de Prefixos) |​ UP-Growth​ |
| TKO​       | Busca em Profundidade​ | Uma   | Vertical (Listas de Utilidade)  | HUI-Miner​ |
| REPT​      | Busca em Profundidade​ | Uma   | Horizontal (Árvore de Prefixos)​ | MU-Growth​ |
| kHMC​      | Busca em Profundidade​ | Uma   | Vertical (Listas de Utilidade)​  | FHM​       |

## Aplicações e Desafios Éticos e Sociais

Há uma vasta gama de problemas do mundo real que podem se beneficiar significativamente do uso de algoritmos de mineração de subconjuntos frequentes de alta utilidade. Entre eles:

* _Mercado de Varejo:_ Potencial para aumentar os lucros ao impulsionar as vendas de produtos mais rentáveis.
* _Mercado de Compra Conjunta:_ Oportunidade de melhorar a lucratividade ao associar produtos visando redução de impostos.
* _Sistema de Recomendação:_ Aprimoramento da capacidade de gerar lucro ao focar em produtos mais rentáveis.
* _Cross-Selling e Up-Selling:_ Estímulo para compras de produtos complementares e promoção de vendas casadas.
* _Tratamento de Saúde:_ Desenvolvimento de conjuntos de tratamentos visando maior eficiência.
* _Detecção de Fraudes:_ Identificação de padrões pouco frequentes, porém altamente úteis, na detecção de fraudes.
Uso da Internet:__ Análise do comportamento dos usuários para aprimorar a importância do site.
* _Telecomunicações:_ Utilização na identificação de padrões de comunicação que resultam em maior lucratividade.
* _Mineração de Texto:_ Identificação de textos com elevado valor agregado.

No entanto, a implementação de algoritmos de mineração de alta utilidade suscita preocupações sociais e éticas que demandam uma atenção cuidadosa. Um ponto crucial é a ameaça à privacidade, uma vez que a identificação de indivíduos a partir de dados aparentemente anônimos pode comprometer a segurança dos mesmos. Ademais, há o risco de manipulação do mercado e do comportamento do consumidor, onde o conhecimento de padrões de consumo pode ser utilizado de maneira indevida para influenciar escolhas.  

Outra questão relevante é a elisão fiscal, na qual empresas utilizam o conhecimento de padrões de alta utilidade para minimizar suas obrigações fiscais de forma legal, mas questionável do ponto de vista ético. Esses desafios destacam a importância de regulamentações sólidas e transparência no uso de algoritmos de mineração de dados, garantindo que o impacto social e ético seja considerado em todas as etapas, desde a implementação até a operação dessas ferramentas avançadas.

## Como usar  
Neste guia iremos ensinar o passo a passo para poder executar o SPMF, um software livre que tem implementado vários algoritmos de mineração de itemsets de alta qualidade.

A execução do SPMF exige o JAVA versão mínima 1.8, aqui iremos mostrar a instalação tanto do JAVA quanto do SPMF para o Windows, o processo de instalação do programa deve ser o mesmo no Linux, já que o programa é baseado em JAVA, a diferença se dará na instalação do JAVA.

### Instalação

Inicialmente segui o guia de instalação do JAVA [deste link](https://www.java.com/pt-BR/download/help/download_options_pt-br.html), mas na hora de execução do SPMF o programa não funcionou e a solução foi reinstalar o JAVA de outra forma. Apenas a fim de documentar um possível erro que você encontre ao tentar executar o SPMF, fica aqui o vídeo do processo de instalação que **não funcionou**.
<figure align="center">
  <video width="480" height="360" controls>
    <source src="img/Instalacao_JAVA18.mp4" type="video/mp4">
  </video>
    <figcaption>Instalação da versão errada do JAVA</figcaption>
</figure>

A instalação do SPMF é simples e se encontra [neste link](https://www.philippe-fournier-viger.com/spmf/index.php?link=download.php). O vídeo a seguir mostra o processo inteiro:
<figure align="center">
  <video width="480" height="360" controls>
    <source src="img/Instalacao_SPMF.mp4" type="video/mp4">
  </video>
    <figcaption>Instalação do software SPMF</figcaption>
</figure>

Como dito anteriormente, no final obtemos um erro do JAVA que é concertado pela re-instalação de uma versão atual [neste link](https://www.oracle.com/java/technologies/downloads/), tal processo é mostrado no vídeo a seguir:
<figure align="center">
  <video width="480" height="360" controls>
    <source src="img/Instalacao_JAVA22.mp4" type="video/mp4">
  </video>
    <figcaption>Instalação da versão mais recente do JAVA</figcaption>
</figure>

### Execução

#### Arquivo de Entrada

O SPMF suporta arquivos de entrada no formato *.txt*. 

A primeira parte do arquivo de entrada é opcional e é usada para nomear os itens presentes no banco de dados. 

* Linhas começando com @​.
* Primeira linha com "@CONVERTED_FROM_TEXT"​
* Demais linhas fazem a ligação do item com sua descrição no formato @ITEM={ID}={DESCRICAO}
  * {ID} é o número do item
  * {DESCRICAO} é o nome do item

<figure align="center">
    <img src="img\Entrada_pt1.png">
    <figcaption>Primira parte do arquivo de entrada (opcional)</figcaption>
</figure>

A segunda parte contém os dados das transações, com cada linha representando uma transação e cada coluna separada por ":" contendo o itemset, a utilidade total do itemset e a utilidade de cada item do itemset, respectivamente.

* Linhas representam as transações​
* Cada linha possui 3 colunas separadas pelo caractere ‘:’​
  1. Coluna 1: itemset com os ids dos itens separados por espaço simples.
  2. Coluna 2: utilidade total do itemset.
  3. Coluna 3: utilidade respectiva de cada item do itemset separadas por espaço simples.​

<figure align="center">
    <img src="img\Entrada_pt2.png">
    <figcaption>Segunda parte do arquivo de entrada</figcaption>
</figure>

#### Execução do Software
Vídeo tutorial de como se deve executar o programa a partir do dado de entrada, o algoritmo escolhido no tutorial foi o *Two-Phase*:
<figure align="center">
  <video width="480" height="360" controls>
    <source src="img/Execucao_SPMF.mp4" type="video/mp4">
  </video>
</figure>
Apesar de no tutorial ser mostrado a execução com o algoritmo *Two-Phase*, temos várias opções de algoritmos para mineração de itensets de alta utilidade, como *UP-Growth*, *UP-Growth+*, *FHM* e *HUI-Miner*.

#### Arquivo de Saída

A saída do algoritmo também é um arquivo *.txt*, contendo os itemsets de alta utilidade encontrados, o suporte do itemset (nem todos os algoritmos geram esse valor) e a utilidade do itemset.

* Linhas representam itemsets de alta utilidade encontrados.​
* Cada linha possui 3 seções:​
  1. O itemset, com os ids ou nomes dos itens separados por espaço simples,  depende da existência da 1ª parte do arquivo de entrada.​
  2. “#SUP: {VALOR}” onde {VALOR} é o suporte do itemset (nem todos os algoritmos geram esse valor)​
  3. “#UTIL: {VALOR}” onde {VALOR} é a utilidade do itemset.

<figure align="center">
    <img src="img\Saida.png">
    <figcaption>Arquivo de saída</figcaption>
</figure>

